name: Fast-Tags
run-name: "Run #${{ github.run_number }} for ${{ github.ref_name }} by @${{ github.actor }}"
on: [ push ]

env:
  PY_VERSION: "3.10.10"

jobs:
  integration:
    runs-on: ubuntu-22.04

    steps:
      # Code Checkout
      - uses: actions/checkout@v3
      # Adds python to runner
      - name: Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          # Python version X processor architecture
          python-version: ${{ env.PY_VERSION }}
          architecture: "x64"
          cache: "pip"

      - name: Display used Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pip-tools
          if [ -f requirements.test.txt ]
          then
              pip-sync requirements.txt requirements.test.txt
          else
              pip-sync requirements.txt
          fi

      - name: Lint code with Flake8
        run: |
          flake8 --ignore=E402 ./api/ schemas.py
        continue-on-error: true

      - name: Test with PyTest
        run: pytest tests --doctest-modules --junitxml=junit/test-results-${{ github.ref_name }}.xml

      - name: Upload pytest test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results-${{ github.ref_name }}.xml
          path: junit/test-results-${{ github.ref_name }}.xml
        if: ${{ always() }}

  delivery:
    runs-on: ubuntu-22.04
    needs: integration
    if: github.ref_name == 'main'

    steps:
      - name: Runs only on Main
        run: echo "Running on ${{ github.ref_name }}"

      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/${{ secrets.DOCKER_HUB_TOKEN }}/fast-tags
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
